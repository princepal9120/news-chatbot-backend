version: '3.8'

services:
  # Main application
  app:
    build: .
    ports:
      - "3000:3001"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://newsai:password@postgres:5432/newsai
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - ENABLE_POSTGRES=true
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - JINA_API_KEY=${JINA_API_KEY}
      - PORT=3001
    depends_on:
      - redis
      - postgres
      - qdrant
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev

  # Redis for session management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # PostgreSQL for persistent storage
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=newsai
      - POSTGRES_USER=newsai
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  # Qdrant vector database
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333

volumes:
  redis_data:
  postgres_data:
  qdrant_data: